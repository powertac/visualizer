<!DOCTYPE composition PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:p="http://primefaces.org/ui"
	template="/WEB-INF/layouts/standard.xhtml">

	<ui:define name="title">Competition Control</ui:define>

	<ui:define name="notes">
		<h5>Comments:</h5>
		<p>From here you can start configure and run the competition.</p>
		<br />
		<p>
			You can also watch the running competition from here:
			<h:outputLink value="gameoverview">
				<h:outputText style="font-weight:bold; font-size:150%;"
					value="GAME VIEW" />
			</h:outputLink>
		</p>
		<br />

		<p:panel id="game_status">
			Game status:
			<h:outputText style="font-weight:bold; font-size:150%;" value=" not"
				rendered="#{not visualizerBean.running}" />
			<h:outputText style="font-weight:bold; font-size:150%;"
				value=" running" />
			<h:outputText style="font-weight:bold; font-size:150%;"
				value=" (finished)" rendered="#{visualizerBean.finished}" />

		</p:panel>
		<h:form>
			<p:poll autoStart="true" interval="5" update=":game_status" />
		</h:form>

	</ui:define>

	<ui:define name="content">
		<h:form id="comp_form">
			<h:panelGroup id="content" layout="block" styleClass="notice">
				<h:outputLabel for="message" value="Message: " styleClass="large" />
				<hr />
				<h:outputText id="message"
					value="#{webCompetitionControlService.message}" />

			</h:panelGroup>
			<br />
			<p:panel header="COMMON:" style="width:700px">
				<h:panelGrid columns="2" style="margin-bottom:10px" cellpadding="5">

					<h:outputText value="Server-config:" />
					<p:inputText value="#{gameParametersBean.serverConfig}"
						title="Optional. If specified, it will override the standard server configuration. You can use a filename for config files contained inside the Visualizer's main directory. Other option is to use the URL." />

					<h:outputText value="Log suffix:" />
					<p:inputText value="#{gameParametersBean.logSuffix}"
						title="Optional. Gives the root name for the log files, and defaults to 'boot' (for bootstrap mode) or 'sim' (for sim mode) ; two log files are produced: powertac-suffix.trace and
  powertac-suffix.state." />

				</h:panelGrid>
			</p:panel>

			<p:panel header="SIM MODE:" style="width:700px">
				<h:panelGrid columns="2" style="margin-bottom:10px" cellpadding="5">

					<h:outputText value="Input Bootstrap data:" />
					<p:inputText id="simBootstrap"
						value="#{gameParametersBean.bootstrapData}"
						title="Required. You can use a filename for bootstrap files contained inside the Visualizer's main directory. Other option is to use the URL." />

					<h:outputText value="JMS URL:" />
					<p:inputText value="#{gameParametersBean.jmsUrl}"
						title="Optional. The URL of the jms message broker, which is typically, but not necessarily, instantiated inside the server. The default value is
  tcp://localhost:61616." />

					<p:dataTable var="broker" value="#{gameParametersBean.brokers}"
						editable="true">
						<f:facet name="header">  
            Brokers
        </f:facet>

						<p:column headerText="Name:" style="width:125px">
							<p:cellEditor>
								<f:facet name="output">
									<h:outputText value="#{broker.name}" />
								</f:facet>
								<f:facet name="input">
									<p:inputText value="#{broker.name}" style="width:100%" />
								</f:facet>
							</p:cellEditor>
						</p:column>
						<p:column headerText="Options" style="width:50px">
							<p:rowEditor />
						</p:column>
					</p:dataTable>

					<h:panelGroup layout="block">
						<p:commandButton value="Add broker" update="display"
							oncomplete="dialog.show()" />
						<p:commandButton value="Reset"
							actionListener="#{gameParametersBean.resetBrokerList}"
							update="comp_form" />
					</h:panelGroup>
					<hr />
					<h:outputText value=" " />
					<p:commandButton value="Run"
						actionListener="#{webCompetitionControlService.runSim}"
						update="content" />
				</h:panelGrid>
			</p:panel>
			<p:panel header="BOOTSTRAP MODE:" style="width:700px">
				<h:panelGrid columns="2" style="margin-bottom:10px" cellpadding="5">

					<h:outputText value="Bootstrap filename:" />
					<p:inputText value="#{gameParametersBean.bootstrapFilename}"
						title="Required. The name (not a URL) of the xml file that will be written with the results of the bootstrap run. An output file will be written in the Visualizer's main directory." />

					<hr />
					<h:outputText value=" " />
					<p:commandButton value="Run"
						actionListener="#{webCompetitionControlService.runBoot}"
						update="content" />
				</h:panelGrid>
			</p:panel>

			<h:panelGroup layout="block">
				<p:commandButton value="Shut down"
					actionListener="#{webCompetitionControlService.shutDown}"
					update="content" />
			</h:panelGroup>

			<p:dialog widgetVar="dialog" modal="true">
				<h:panelGrid id="display" columns="2" cellpadding="5">

					<h:outputText value="Name:" />
					<p:inputText value="#{gameParametersBean.newBrokerName}"
						label="text" />

					<p:commandButton value="Add"
						actionListener="#{gameParametersBean.addBroker}"
						update="comp_form" oncomplete="dialog.hide()" />
				</h:panelGrid>
			</p:dialog>
			<hr />
		</h:form>
	</ui:define>
</ui:composition>